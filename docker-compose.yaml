version: '3'
services:
  mongodb:
    build:
      context: mongo
    container_name: robot-shop-mongo
    networks:
      - robot-shop
    logging: &logging
      driver: "json-file"
      options:
        max-size: "25m"
        max-file: "2"

  redis:
    image: redis:6.2-alpine
    container_name: robot-shop-redis
    networks:
      - robot-shop
    logging:
      <<: *logging

  rabbitmq:
    image: rabbitmq:3.8-management-alpine
    container_name: robot-shop-rabbitmq
    networks:
      - robot-shop
    logging:
      <<: *logging

  catalogue:
    build:
      context: catalogue
    container_name: robot-shop-catalogue
    depends_on:
      - mongodb
    networks:
      - robot-shop
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
      interval: 10s
      timeout: 10s
      retries: 3
    logging:
      <<: *logging

  user:
    build:
      context: user
    container_name: robot-shop-user
    depends_on:
      - mongodb
      - redis
    networks:
      - robot-shop
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
      interval: 10s
      timeout: 10s
      retries: 3
    logging:
      <<: *logging

  cart:
    build:
      context: cart
    container_name: robot-shop-cart
    depends_on:
      - redis
    networks:
      - robot-shop
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
      interval: 10s
      timeout: 10s
      retries: 3
    logging:
      <<: *logging

  mysql:
    build:
      context: mysql
    container_name: robot-shop-mysql
    cap_add:
      - NET_ADMIN
    networks:
      - robot-shop
    logging:
      <<: *logging

  shipping:
    build:
      context: shipping
    container_name: robot-shop-shipping
    depends_on:
      - mysql
    networks:
      - robot-shop
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 3
    logging:
      <<: *logging

  ratings:
    build:
      context: ratings
    container_name: robot-shop-ratings
    environment:
      APP_ENV: prod
    depends_on:
      - mysql
    networks:
      - robot-shop
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/_health"]
      interval: 10s
      timeout: 10s
      retries: 3
    logging:
      <<: *logging

  payment:
    build:
      context: payment
    container_name: robot-shop-payment
    depends_on:
      - rabbitmq
    networks:
      - robot-shop
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 3
    logging:
      <<: *logging

  dispatch:
    build:
      context: dispatch
    container_name: robot-shop-dispatch
    depends_on:
      - rabbitmq
    networks:
      - robot-shop
    logging:
      <<: *logging

  web:
    build:
      context: web
    container_name: robot-shop-web
    depends_on:
      - catalogue
      - user
      - shipping
      - payment
    ports:
      - "8080:8080"
    networks:
      - robot-shop
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/" ]
      interval: 10s
      timeout: 10s
      retries: 3
    logging:
      <<: *logging

networks:
  robot-shop:
