name: docker-compose-actions-workflow
on:
  push:
    branches:
      - 'master'
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to build'
        required: false
        default: 'master'

    paths:
      - cart/**
      - catalog/**
      - dispatch/**
      - mongo/**
      - mysql/**
      - payment/**
      - ratings/**
      - shipping/**
      - user/**
      - web/**

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Filter changed directories
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            cart:
              - 'cart/**'
            catalog:
              - 'catalog/**'
            dispatch:
              - 'dispatch/**'
            mongo:
              - 'mongo/**'
            mysql:
              - 'mysql/**'
            payment:
              - 'payment/**'
            ratings:
              - 'ratings/**'
            shipping:
              - 'shipping/**'
            user:
              - 'user/**'
            web:
              - 'web/**'
      - name: Set matrix
        id: set-matrix
        run: |
          changed=()
          for svc in cart catalog dispatch mongo mysql payment ratings shipping user web; do
            if [[ "${{ steps.filter.outputs.${svc} }}" == 'true' ]]; then
              changed+=("${svc}")
            fi
          done
          echo "matrix={\"service\":[${changed[*]}]}" >> $GITHUB_OUTPUT
  
  build-and-test:
    needs: detect-changes
    # if: ${{ fromJson(needs.detect-changes.outputs.matrix).service != '' }}
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.detect-changes.outputs.matrix) }}
    outputs:
      image_tag: ${{ steps.set-tag.outputs.image_tag }}
    steps:
      - uses: actions/checkout@v4
      - name: Set image tag
        id: set-tag
        run: |
          echo "image_tag=ghcr.io/${{ github.repository_owner }}/${{ matrix.service }}:latest" >> $GITHUB_OUTPUT
      - name: Build and test
        run: |
          cd ${{ matrix.service }}
          docker build -t ${{ steps.set-tag.outputs.image_tag }} .
          docker run --rm ${{ steps.set-tag.outputs.image_tag }}

  # push-to-ghcr:
  #   needs: build-and-test
  #   if: ${{ fromJson(needs.detect-changes.outputs.matrix).service != '' }}
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix: ${{ fromJson(needs.detect-changes.outputs.matrix) }}
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Login to GHCR
  #       uses: docker/login-action@v3
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}
  #     - name: Push image to GHCR
  #       run: docker push ${{ needs.build-and-test.outputs.image_tag }}